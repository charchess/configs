# Fichier : talos/manifests/cert-manager-webhook-gandi.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-webhook-gandi
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-webhook-gandi:domain-solver
rules:
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - challenges
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-webhook-gandi:domain-solver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-webhook-gandi:domain-solver
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cert-manager-webhook-gandi
    namespace: cert-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-webhook-gandi
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cert-manager-webhook-gandi
  template:
    metadata:
      labels:
        app: cert-manager-webhook-gandi
    spec:
      serviceAccountName: cert-manager-webhook-gandi
      # --- AJOUT DES TOLERATIONS ---
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      # ---------------------------
      containers:
        - name: webhook
          image: sintef/cert-manager-webhook-gandi:v1.7.0
          args:
            - --tls-cert-file=/tls/tls.crt
            - --tls-key-file=/tls/tls.key
          ports:
            - containerPort: 8443
              name: https
          volumeMounts:
            - name: tls
              mountPath: /tls
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: cert-manager-webhook-gandi-tls
            