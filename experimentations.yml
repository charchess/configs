# experimentation.yml
version: '3.8'

services:
  n8n:
    image: n8nio/n8n
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres # 'postgres' est le nom du service dans la stack 'databases'
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD_FILE=/run/secrets/postgres_n8n_password # Utilisation du secret
      - N8N_HOST=n8n.truxonline.com
      - N8N_PORT=5678
      - N8N_PROTOCOL=http # CHANGEMENT CLÉ : n8n écoute en HTTP en interne
      - WEBHOOK_URL=https://n8n.truxonline.com/ # L'URL externe reste HTTPS
      - N8N_BASE_URL=https://n8n.truxonline.com/ # L'URL externe reste HTTPS
      - N8N_RUNNERS_ENABLED=true
      - N8N_SECURE_COOKIE=false # Garder à true pour le côté client/navigateur
    volumes:
      - /data/nfs/containers/experimentations/n8n/data:/home/node/.n8n
    secrets:
      - postgres_n8n_password
    networks:
      - experimentation_network
      - databases_network # Pour accéder au service 'postgres' dans la stack 'databases'
      - logs_network      # AJOUTÉ : Pour envoyer les logs à Graylog
      - ai_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      labels: # Labels Traefik pour exposer n8n via HTTPS
        - "traefik.enable=true"
        - "traefik.http.routers.n8n-https.rule=Host(`n8n.truxonline.com`)"
        - "traefik.http.routers.n8n-https.entrypoints=internal-secure"
        - "traefik.http.routers.n8n-https.tls=true"
        - "traefik.http.routers.n8n-https.tls.certresolver=gandi"
        - "traefik.http.services.n8n-https.loadbalancer.server.port=5678"
        
        - "traefik.http.services.n8n-https.loadbalancer.server.scheme=http" # CHANGEMENT CLÉ : Traefik communique en HTTP avec le backend
                                                                          # Cela correspond à N8N_PROTOCOL=http
        - "traefik.docker.network=experimentation_network" # AJOUT : Indique explicitement le réseau à Traefik
    logging: # AJOUTÉ : Configuration du logging vers Graylog
      driver: gelf
      options:
        gelf-address: "udp://192.168.201.66:12201" # Utilise l'adresse IP statique de Graylog
        tag: "n8n/{{.Name}}/{{.ID}}" # Tag pour identifier les logs dans Graylog

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    ports:
      - "8333:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    networks:
      - experimentation_network
      - databases_network # Pour accéder au service 'postgres' dans la stack 'databases'
      - logs_network      # AJOUTÉ : Pour envoyer les logs à Graylog

# Définition des secrets utilisés dans cette stack
secrets:
  postgres_n8n_password:
    external: true

configs:
  experimentations_sillytavern-gemini_config.yaml:
    external: true

# Définition des réseaux utilisés par cette stack
networks:
  experimentation_network:
    external: true # Ce réseau sera créé avec le déploiement de cette stack
  databases_network:
    external: true # Réseau de la stack 'databases'
  logs_network: # AJOUTÉ : Réseau de la stack logs (Graylog), doit être externe
    external: true
