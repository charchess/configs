## Statut du Projet - code_lisa
**Version Actuelle de l'Agent : 13.11.0**

### Éléments Réalisés / Validés
*   **Infrastructure de Base :**
    *   Déploiement du service d'embedding (`embedding-service`).
    *   Déploiement de la base de données vectorielle (`chromadb`).
    *   Déploiement du LLM local (`oobabooga`), en attente d'utilisation.
*   **Agent & Interface :**
    *   Le `chat-ui` est fonctionnel pour l'interaction.
    *   La connexion et le dialogue avec le LLM `gemini` sont stables.
    *   Les commandes internes (`/version`, `/debug`) sont fonctionnelles et stables.
    *   Le dialogue standard (non-commande) est fonctionnel après correction des erreurs.

### En Cours
*   **Refonte Architecturale (Priorité Haute) :**
    *   Finalisation de l'implémentation de l'architecture "mémoires composables".
    *   Validation des appels directs à `ChromaDB` via le nouveau `VectorStoreAdapter` (actuellement bloqué par des dépendances manquantes, voir Problèmes).
*   **Amélioration de l'Intelligence :**
    *   Affinage du prompt `GRAPH_EXTRACTOR_PROMPT` pour que Neo4j puisse inférer des relations complexes à partir des phrases ("casser" l'information).

### Problèmes Actuels
*   **Dépendances Manquantes (Bloquant) :** Le service `intent-router` crashe au démarrage car les paquets Python `chromadb-client` et `sentence-transformers` ne sont pas dans `requirements.txt`.
*   **Connexions n8n (Origine de la refonte) :** L'instabilité des webhooks n8n a motivé la décision de passer à une architecture d'appels directs.

### Roadmap / Souhaits d'Évolution
*   **Phase 1 (Actuelle) :** Stabiliser la nouvelle architecture avec **ChromaDB** via le pattern "Adapter".
*   **Phase 2 (Production) :** Remplacer ChromaDB par **Qdrant** en implémentant un nouvel Adapter, pour des performances et une robustesse accrues.
*   **Vision à Long Terme :**
    *   Intégrer les autres mémoires spécialisées (Redis pour la mémoire vive, PostgreSQL pour les données froides).
    *   Faire de `intent-router` l'unique orchestrateur, minimisant l'usage de n8n aux seules actions sur des services externes (ex: Home Assistant).

### Déprécié
*   **Zep :** Remplacé par Neo4j pour la gestion de la mémoire relationnelle/graphe.
*   **Webhooks n8n pour la gestion de la mémoire :** Remplacés par des appels directs à la base de données vectorielle via l'Adapter.